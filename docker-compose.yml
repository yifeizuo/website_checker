version: "3.8"
services:
  producer:
    build:
      context: ./
      dockerfile: Dockerfile-producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TOPIC=my_topic
      - CHECK_INTERVAL_IN_SECONDS=5
      - CHECK_URL=https://www.google.com
  consumer:
    build:
      context: ./
      dockerfile: Dockerfile-consumer
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TOPIC=my_topic
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=my_user
      - DB_NAME=my_db
      - DB_PASSWORD=securepassword
      - AGGREGATE_DATA_AS_HOURLY=FALSE
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka:latest
    depends_on: 
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      # - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      # auto.create.topics.enable
      # Kafka will create topics automatically when you send messages to non-existing topics
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  monitoring:
    image: "obsidiandynamics/kafdrop:latest"
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx256M"
      SERVER_PORT: 8080
  postgres:
    image: postgres:13.3-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: my_user
      POSTGRES_DB: my_db
      POSTGRES_PASSWORD: securepassword
    volumes:
      - aiven-dev-postgres:/var/lib/postgresql/data
volumes:
  aiven-dev-postgres: